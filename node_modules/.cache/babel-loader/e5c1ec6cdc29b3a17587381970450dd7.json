{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahirali/Tech-Stack/REACT_Projects/music-app/src/components/Library.js\";\nimport React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({\n  songs,\n  setSongs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setIsPlaying,\n  libraryStatus\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `library  `,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"library-songs\",\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(LibrarySong, {\n        song: song,\n        songs: songs,\n        setSongs: setSongs,\n        setCurrentSong: setCurrentSong,\n        id: song.id,\n        audioRef: audioRef,\n        isPlaying: isPlaying,\n        setIsPlaying: setIsPlaying\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Library;\nexport default Library;\n\nvar _c;\n\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"sources":["/Users/sahirali/Tech-Stack/REACT_Projects/music-app/src/components/Library.js"],"names":["React","LibrarySong","Library","songs","setSongs","setCurrentSong","audioRef","isPlaying","setIsPlaying","libraryStatus","map","song","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,KADe;AAEfC,EAAAA,QAFe;AAGfC,EAAAA,cAHe;AAIfC,EAAAA,QAJe;AAKfC,EAAAA,SALe;AAMfC,EAAAA,YANe;AAOfC,EAAAA;AAPe,CAAD,KAQV;AACJ,sBACE;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACGN,KAAK,CAACO,GAAN,CAAWC,IAAD,iBACT,QAAC,WAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,KAAK,EAAER,KAFT;AAGE,QAAA,QAAQ,EAAEC,QAHZ;AAIE,QAAA,cAAc,EAAEC,cAJlB;AAKE,QAAA,EAAE,EAAEM,IAAI,CAACC,EALX;AAOE,QAAA,QAAQ,EAAEN,QAPZ;AAQE,QAAA,SAAS,EAAEC,SARb;AASE,QAAA,YAAY,EAAEC;AAThB,SAMOG,IAAI,CAACC,EANZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA7BD;;KAAMV,O;AA+BN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({\n  songs,\n  setSongs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setIsPlaying,\n  libraryStatus,\n}) => {\n  return (\n    <div className={`library  `}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            song={song}\n            songs={songs}\n            setSongs={setSongs}\n            setCurrentSong={setCurrentSong}\n            id={song.id}\n            key={song.id}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            setIsPlaying={setIsPlaying}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n"]},"metadata":{},"sourceType":"module"}