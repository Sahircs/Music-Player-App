{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sahirali/Tech-Stack/REACT_Projects/music-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport \"./styles/app.scss\"; // APP DATA -> SONGS\n\nimport data from \"./data\"; // Importing Util\n// import { playAudio } from \"./util\";\n// COMPONENTS\n\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  _s();\n\n  // STATE\n  // data() - returns the song data\n  const [songs, setSongs] = useState(data()); // songs[0] -> default currentSong\n\n  const [currentSong, setCurrentSong] = useState(songs[0]); // Paused by default\n\n  const [isPlaying, setIsPlaying] = useState(false); // Default Time\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0\n  });\n\n  const timeUpdate = event => {\n    const current = event.target.currentTime;\n    const duration = event.target.duration;\n    setSongInfo({ ...songInfo,\n      currentTime: current,\n      duration\n    });\n  }; // Reference -> audio\n\n\n  const audioRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Song, {\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      isPlaying: isPlaying,\n      setIsPlaying: setIsPlaying,\n      currentSong: currentSong,\n      audioRef: audioRef,\n      songInfo: songInfo,\n      setSongInfo: setSongInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      songs: songs,\n      setSongs: setSongs,\n      setCurrentSong: setCurrentSong,\n      audioRef: audioRef,\n      isPlaying: isPlaying,\n      setIsPlaying: setIsPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: timeUpdate,\n      onLoadedMetadata: timeUpdate,\n      ref: audioRef,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xuB8jeXQPkCP7LCWMdqCQcehMHw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sahirali/Tech-Stack/REACT_Projects/music-app/src/App.js"],"names":["React","useState","useRef","data","Player","Song","Library","Nav","App","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","songInfo","setSongInfo","currentTime","duration","timeUpdate","event","current","target","audioRef","audio"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,mBAAP,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;AACA;AAEA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACE,IAAI,EAAL,CAAlC,CAHa,CAIb;;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAACQ,KAAK,CAAC,CAAD,CAAN,CAA9C,CALa,CAMb;;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C,CAPa,CAQb;;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC;AACvCgB,IAAAA,WAAW,EAAE,CAD0B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC;;AAKA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,UAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaL,WAA7B;AACA,UAAMC,QAAQ,GAAGE,KAAK,CAACE,MAAN,CAAaJ,QAA9B;AACAF,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,MAAAA,WAAW,EAAEI,OAA5B;AAAqCH,MAAAA;AAArC,KAAD,CAAX;AACD,GAJD,CAda,CAoBb;;;AACA,QAAMK,QAAQ,GAAGrB,MAAM,CAAC,IAAD,CAAvB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,WAAW,EAAES;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AACE,MAAA,SAAS,EAAEE,SADb;AAEE,MAAA,YAAY,EAAEC,YAFhB;AAGE,MAAA,WAAW,EAAEH,WAHf;AAIE,MAAA,QAAQ,EAAEY,QAJZ;AAKE,MAAA,QAAQ,EAAER,QALZ;AAME,MAAA,WAAW,EAAEC;AANf;AAAA;AAAA;AAAA;AAAA,YAHF,eAWE,QAAC,OAAD;AACE,MAAA,KAAK,EAAEP,KADT;AAEE,MAAA,QAAQ,EAAEC,QAFZ;AAGE,MAAA,cAAc,EAAEE,cAHlB;AAIE,MAAA,QAAQ,EAAEW,QAJZ;AAKE,MAAA,SAAS,EAAEV,SALb;AAME,MAAA,YAAY,EAAEC;AANhB;AAAA;AAAA;AAAA;AAAA,YAXF,eAmBE;AACE,MAAA,YAAY,EAAEK,UADhB;AAEE,MAAA,gBAAgB,EAAEA,UAFpB;AAGE,MAAA,GAAG,EAAEI,QAHP;AAIE,MAAA,GAAG,EAAEZ,WAAW,CAACa;AAJnB;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAnDQhB,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./styles/app.scss\";\n\n// APP DATA -> SONGS\nimport data from \"./data\";\n// Importing Util\n// import { playAudio } from \"./util\";\n\n// COMPONENTS\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  // STATE\n  // data() - returns the song data\n  const [songs, setSongs] = useState(data());\n  // songs[0] -> default currentSong\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  // Paused by default\n  const [isPlaying, setIsPlaying] = useState(false);\n  // Default Time\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n  \n  const timeUpdate = (event) => {\n    const current = event.target.currentTime;\n    const duration = event.target.duration;\n    setSongInfo({ ...songInfo, currentTime: current, duration });\n  };\n\n  // Reference -> audio\n  const audioRef = useRef(null);\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Song currentSong={currentSong} />\n      <Player\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n      />\n      <Library\n        songs={songs}\n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n      />\n      <audio\n        onTimeUpdate={timeUpdate}\n        onLoadedMetadata={timeUpdate}\n        ref={audioRef}\n        src={currentSong.audio}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}