{"ast":null,"code":"// Song not loaded up -> use Promise() -> when fully loaded -> play\nexport const playAudio = (isPlaying, audioRef) => {\n  if (isPlaying) {\n    const playPromise = audioRef.current.play();\n\n    if (playPromise !== undefined) {\n      playPromise.then(() => {\n        audioRef.current.play();\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/sahirali/Tech-Stack/REACT_Projects/music-app/src/util.js"],"names":["playAudio","isPlaying","audioRef","playPromise","current","play","undefined","then"],"mappings":"AAAA;AAEA,OAAO,MAAMA,SAAS,GAAG,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AAChD,MAAID,SAAJ,EAAe;AACb,UAAME,WAAW,GAAGD,QAAQ,CAACE,OAAT,CAAiBC,IAAjB,EAApB;;AACA,QAAIF,WAAW,KAAKG,SAApB,EAA+B;AAC7BH,MAAAA,WAAW,CAACI,IAAZ,CAAiB,MAAM;AACrBL,QAAAA,QAAQ,CAACE,OAAT,CAAiBC,IAAjB;AACD,OAFD;AAGD;AACF;AACF,CATM","sourcesContent":["// Song not loaded up -> use Promise() -> when fully loaded -> play\n\nexport const playAudio = (isPlaying, audioRef) => {\n  if (isPlaying) {\n    const playPromise = audioRef.current.play();\n    if (playPromise !== undefined) {\n      playPromise.then(() => {\n        audioRef.current.play();\n      });\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}