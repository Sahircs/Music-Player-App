{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahirali/Tech-Stack/REACT_Projects/music-app/src/components/LibrarySong.js\";\n// Displays name, artist and picture\nimport React from \"react\";\nimport { playAudio } from \"../util\";\n\nconst LibrarySong = ({\n  song,\n  songs,\n  setSongs,\n  setCurrentSong,\n  id,\n  key,\n  audioRef,\n  isPlaying,\n  setIsPlaying\n}) => {\n  const songSelect = () => {\n    setCurrentSong(song); // SET ACTIVE\n\n    const newSongs = songs.map(song => {\n      if (song.id === id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs); // Play Au\n\n    playAudio(isPlaying, audioRef);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: songSelect,\n    className: `library-song ${song.active ? \"selected\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover,\n      alt: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", song.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\" \", song.artist, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["/Users/sahirali/Tech-Stack/REACT_Projects/music-app/src/components/LibrarySong.js"],"names":["React","playAudio","LibrarySong","song","songs","setSongs","setCurrentSong","id","key","audioRef","isPlaying","setIsPlaying","songSelect","newSongs","map","active","cover","name","artist"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,SAA1B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,IADmB;AAEnBC,EAAAA,KAFmB;AAGnBC,EAAAA,QAHmB;AAInBC,EAAAA,cAJmB;AAKnBC,EAAAA,EALmB;AAMnBC,EAAAA,GANmB;AAOnBC,EAAAA,QAPmB;AAQnBC,EAAAA,SARmB;AASnBC,EAAAA;AATmB,CAAD,KAUd;AACJ,QAAMC,UAAU,GAAG,MAAM;AACvBN,IAAAA,cAAc,CAACH,IAAD,CAAd,CADuB,CAEvB;;AACA,UAAMU,QAAQ,GAAGT,KAAK,CAACU,GAAN,CAAWX,IAAD,IAAU;AACnC,UAAIA,IAAI,CAACI,EAAL,KAAYA,EAAhB,EAAoB;AAClB,eAAO,EAAE,GAAGJ,IAAL;AAAWY,UAAAA,MAAM,EAAE;AAAnB,SAAP;AACD,OAFD,MAEO;AACL,eAAO,EAAE,GAAGZ,IAAL;AAAWY,UAAAA,MAAM,EAAE;AAAnB,SAAP;AACD;AACF,KANgB,CAAjB;AAOAV,IAAAA,QAAQ,CAACQ,QAAD,CAAR,CAVuB,CAYvB;;AACAZ,IAAAA,SAAS,CAACS,SAAD,EAAYD,QAAZ,CAAT;AACD,GAdD;;AAeA,sBACE;AACE,IAAA,OAAO,EAAEG,UADX;AAEE,IAAA,SAAS,EAAG,gBAAeT,IAAI,CAACY,MAAL,GAAc,UAAd,GAA2B,EAAG,EAF3D;AAAA,4BAIE;AAAK,MAAA,GAAG,EAAEZ,IAAI,CAACa,KAAf;AAAsB,MAAA,GAAG,EAAEb,IAAI,CAACc;AAAhC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,wBAAMd,IAAI,CAACc,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,wBAAMd,IAAI,CAACe,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtCD;;KAAMhB,W;AAwCN,eAAeA,WAAf","sourcesContent":["// Displays name, artist and picture\nimport React from \"react\";\nimport { playAudio } from \"../util\";\n\nconst LibrarySong = ({\n  song,\n  songs,\n  setSongs,\n  setCurrentSong,\n  id,\n  key,\n  audioRef,\n  isPlaying,\n  setIsPlaying,\n}) => {\n  const songSelect = () => {\n    setCurrentSong(song);\n    // SET ACTIVE\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return { ...song, active: true };\n      } else {\n        return { ...song, active: false };\n      }\n    });\n    setSongs(newSongs);\n\n    // Play Au\n    playAudio(isPlaying, audioRef);\n  };\n  return (\n    <div\n      onClick={songSelect}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img src={song.cover} alt={song.name}></img>\n      <div className=\"song-description\">\n        <h3> {song.name} </h3>\n        <h4> {song.artist} </h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}